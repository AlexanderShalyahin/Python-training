#304. Напишіть програму, яка приймає від користувача рядок, і відображає цей рядок у верхньому і нижньому регістрах.
# f = 'My favourite language is Python'
# print(f.upper(),'\n'+f.lower())
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#305. Скласти програму, яка запитує назву баскетбольної команди і повторює її на екрані зі словами: This is a champion!.
# f = input('Name of teem: ')
# print(f'{f}! This is a champion!')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#306. Напишіть програму, яка виводить на екран рядок з 5-ти копій останніх двох символів введеного користувачем рядка
# (довжина введеного рядка повинна бути не менше 2).
# f = input('Enter: ')
# print(f[-2:] * 5)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#307. Дано натуральне число. Знайти число, утворене з вхідного приписуванням до нього такого ж числа.
# f = 5
# print(str(f) * 2)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#308. Дано натуральне число. Знайти число, що отримується при прочитанні його цифр справа наліво.
# f = 1235
# print(str(f)[::-1])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#309. Дано рядок. Змініть регістр символів в цьому рядку так, щоб перша буква кожного слова була великою, а інші літери - малими.
# f = 'A scandal in Bohemia'
# print(f.title())
#310. Дано натуральне число. Знайти число, що отримується в результаті приписування по двійці в початок і кінець запису вхідного числа.
# f = 2
# print(f'2{f}2')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#311. Користувач вводить рядок і набір символів. Напишіть програму, яка перевіряє чи починається рядок із зазначених символів.
# f = 'wireless router'
# if f.startswith('wireless'):
#     print('True')
# else:
#     print('False')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#312. Дано рядок. Визначити порядковий номер першої вказаної букви. Якщо такої літери немає, вивести нуль.
# a = 'euro'
# f = 'r'
# print(a.index(f)+1)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#313. Дано слово. З’ясуйте, чи слово починається і закінчується на одну і ту ж букву? Регістр літер не враховувати.
# f = 'Africa'
#
# if f.lower()[0] == f.lower()[-1]:
#     print(f.lower()[0] == f.lower()[-1])
# else:
#     print(f.lower()[0] == f.lower()[-1])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#314. Напишіть програму, яка отримує три рядки: прізвище, ім’я і по батькові особи, а потім виводить на екран ініціали та прізвище.
# surname = input('surname: ')
# first_name = input('first name: ')
# patronymic = input('patronymic: ')
# print(first_name[0] + '.' + patronymic[0] + '.' + surname)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#315. Скласти програму, яка визначає, який з двох введених рядків довший і друкує його. Якщо рядки рівні, вивести повідомлення equally.
# a = 'Linusj'
# b = 'Guidokj'
#
# if len(a) > len(b):
#     print(a)
# elif len(a) < len(b):
#     print(b)
# else:
#     print('equally')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#316. Дано натуральне число. Знайти число, що отримується з вхідного перестановкою його першої та останньої цифр. Врахувати випадок введення одноцифрового числа.
# f = 12
# lst = []
# for i in str(f):
#     lst.append(i)
# if len(lst)>2:
#     print(f)
# else:
#     a, b = 0, -1
#     lst[a], lst[b] = lst[b], lst[a]
#     g = ''.join(lst)
#     print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#317. Дано два слова. Скласти програму, яка визначає, чи перше слово починається на ту ж букву, на яку закінчується друге слово.
# a = 'Python'
# b = 'Ruby'
#
# if a.lower()[0] == b.lower()[-1]:
#     print('True')
# else:
#     print('False')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#318. Дано натуральне число. Знайти число, що отримується видаленням з вхідного усіх зазначених цифр.
# n = 34547
# d = 4
# lst = []
# for i in str(n):
#     if i == str(d):
#         continue
#     lst.append(i)
# g = ''.join(lst)
# print(int(g))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#319. Напишіть програму, яка зчитує значення a і b і виводить вірш, в якому замість a і b використовуються ці значення.
# a = 'Anna'
# b = 'Bianca'
# print(f'''{a} and {b} sat in the tree.
# {a} had fallen, {b} was stolen.
# What's remaining in the tree?
# ''')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#320. Користувач вводить рядок, в якому можуть бути пристуні пропуски.
# Визначити, чи є рядок паліндромом, тобто таким, який однаково читається як справа наліво, так і зліва направо.
# Для літер регістр не враховувати. Приклади рядків-паліндромів: racecar, 10201, Ada, Never odd or even.
# f = input('enter: ')
# lst = []
# for i in f:
#     if i.isalnum():
#         lst.append(i.lower())
#
# print(lst)
# if lst == lst[::-1]:
#     print('True')
# else:
#     print('False')
# print(lst)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#321.Дано два рядки, що можуть містити пропуски.
# Виведіть слово Yes, якщо перший рядок є підрядком другого рядка або слово No в іншому випадку.
#
# b = 'But who shall dwell in these worlds if they be inhabited? Are we or they Lords of the World? And how are all things made for man?'
# a = 'Lords of the World'
# c = b.find(a)
# if c != -1:
#     print('Yes')
# else:
#     print('No')
#
# if a in b:
#     print('yes')
# else:
#     print('No')
#
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#322. З клавіатури вводиться два цілих числа a і b.
# Напишіть програму, яка порівнює ці числа і в залежності від результату порівняння виводить на екран потрібний вираз,
# наприклад: 3 < 5 або 3 = 3 або 3 > 2.
# Команду print для виведення результату дозволяється використовувати лише один раз.
# a = 10
# b = 15
# if a > b:
#     c = '>'
# elif a < b:
#     c = '<'
# elif a == b:
#     c = '='
#
# print(a, c, b)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#323. Напишіть програму, щоб перевірити, з яких символів складається рядок, введений користувачем: лише з цифр, лише з букв, або з букв і цифр.
# f = 'jgg12'
#
# if f.isalpha():
#     a = 'letters only'
# elif f.isnumeric():
#     a = 'numbers only'
# else:
#     a = 'numbers and letters'
# print(f'Your message includes {a}')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#324. Для введеного єдиного символу, перевірте, чи є він цифрою.
# Під час розв’язування задачі не можна використовувати функції для роботи з рядками.
# Програма повинна вивести слово Yes, якщо символ є цифрою, або слово No.
# f = input('enter: ')
# try:
#     if type(int(f)) == type(7):
#         print('Yes')
#
# except:
#     print('No')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#325. Напишіть програму, щоб отримати новий рядок з двох заданих введених рядків (складаються мінімум з двох символів кожен),
# розділених пробілом, і обміном перших двох символів у кожному із вхідних рядків.
# a = 'liopping'
# b = 'shst'
#
# c = a.replace(a[0:2], b[0:2])
# d = b.replace(b[0:2], a[0:2])
#print(c, d)
#або
# print(a.replace(a[0:2], b[0:2]), b.replace(b[0:2], a[0:2]))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#326. Дано рядок. Замініть у цьому рядку всі цифри 4 на слово Four.
# f = '4 Christmases'
# print(f.replace('4', 'Four'))
#
# g = f.replace('4', 'Four')
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#327.Дано рядок.
# Замініть у цьому рядку усі входження певної літери англійського алфавіту, яку вводить користувач у нижньому регістрі,
# на відповідну літеру у верхньому регістрі. Спочатку вводиться літера, а потім рядок, у якому треба виконати заміну.
# a = 'a'
# b = 'Curiouser and curiouser!" cried Alice (she was so much surprised that for the moment she quite forgot how to speak good English).'
#
# print(b.replace(a, "A"))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#328. Користувач вводить рядок, у якому чергуються цифри та інші символи. На початку і у кінці рядка цифри відсутні.
# Напишіть програму, яка друкує усі символи введеного рядка у тому ж порядку, але без цифр.
# a = 'i1m3p4o9r0t4 6t7h8i9s'
# lst = []
# for i in a:
#     if i.isdigit():
#         continue
#     lst.append(i)
# g = ''.join(lst)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#329. Напишіть програму, щоб у введеному користувачем рядку виконати обмін місцями першого та останнього символів.
# a = 'Hong Kong'
# lst = []
# for i in a:
#     lst.append(i)
# b, c = 0, -1
# lst[b], lst[c] = lst[c], lst[b]
# g = ''.join(lst)
# print(g)
#
# a = a[-1] + a[1:-1] + a[0]
# print(a)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#330. Напишіть програму, яка змінює регістр введеного єдиного символу,
# тобто переводить великі літери у малі, а малі - у великі, інші символи не змінює.
# a = 'A'
# if a == a.lower():
#     print(a.upper())
# elif a == a.upper():
#     print(a.lower())
# elif a.isdigit():
#     print(a)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#331. Вводиться додатне ціле трицифрове число. Знайти суму цифр числа.
# Операціями ділення націло і остача від ділення користуватися не можна.
# a = '179'
# print(int(a[0]) + int(a[1]) + int(a[2]))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#332. Напишіть програму, яка виводить перше слово у рядку.
# Слово - це послідовність непробільних символів, обмежена пропусками або межами рядка.
# Вхідний рядок містить довільну послідовність символів. Програма повинна вивести перше слово цього рядка.
# a = 'Stranger Things'
# print(a.split()[0])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#333. Напишіть програму, яка виводить останнє слово у рядку.
# Слово – це послідовність непробільних символів, обмежена пропусками або межами рядка.
# Вхідний рядок містить довільну послідовність символів. Програма повинна вивести останнє слово цього рядка.
# a = 'Holmes & Watson'
# print(a.split()[-1])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#334. Напишіть програму, яка по введеному числу n від 1 до 9 виводить на екран n пінгвінів з відповідним номером - число від 1 до n.
# Зображення одного пінгвіна має розмір 5 x 9 символів, між двома сусідніми пінгвінами також є порожній (з пропусків) стовпець.
# Дозволяється вивести порожній стовпець після останнього пінгвіна. Для спрощення малювання скопіюйте пінгвіна із вихідних даних.
# Врахуйте, що виведення на екран виконується порядково, а не «попінгвінно».
# n = 4
# lst = []
#
# for i in range(1,n+1):
#     d = f'/(  {i}  )\\ '
#     lst.append(d)
# g = ''.join(lst)
#
# a = '   _~_    ' * n
# b = '  (o o)   ' * n
# c = ' /  V  \\  ' * n
# d = g #d = '/(     )\\ ' * n
# e = '  ^^ ^^   ' * n
#
# print(a)
# print(b)
# print(c)
# print(d)
# print(e)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#335. Дано рядок, який, можливо, містить пропуски. «Витягніть» з цього рядка всі символи, які є цифрами і складіть з них новий рядок.
# n = 'zfsadf5sfsdf 5sfd s 54 sdfs5fds sfsf44s5f5d4s5df sf'
# lst = []
# for i in n:
#     if i.isdigit():
#         lst.append(i)
#
# g = ''.join(lst)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#336. Для доступу до власного акаунту на сайті соціальної мережі користувач ввів логін і пароль.
# Так як була увімкнена двофакторна авторизація, на його телефон прийшло повідомлення з рядком цифр та інформацією як отримати код доступу.
# У повідомленні йшлося: «Кожну цифру, яка більша 5, необхідно націло розділити на 2, а потім з утвореної послідовності цифр видалити усі парні числа».
# Який код повинен ввести користувач для успішної авторизації?
# Напишіть програму, на вхід якої вводиться рядок цифр із повідомлення, а програма повинна надрукувати правильний код доступу.
# from os import remove
# n = 2784
# lst = []
# for i in str(n):
#     lst.append(int(i))
#
# lst_f = []
# for i in lst:
#     if i > 5:
#         i = i // 2
#     lst_f.append(i)
#
# lst_n = []
# for i in lst_f:
#     if i%2 == 0:
#        continue
#     lst_n.append(str(i))
#
# g = ''.join(lst_n)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# 337.Виведіть усі символи ASCII з кодами від n (n > 32) до m (m < 127) і їх коди в наступному вигляді: «символ код».
# n = 101 # (n > 32)
# m = 106 # (m < 127)
#
# for i in range(n, m+1):
#     print(chr(i), i)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#338. У рядку є кілька слів, розділених одним або декількома пропусками.
# Потрібно прибрати з тексту зайві пропуски: два і більше пропусків поспіль, а також всі пропуски на початку і в кінці рядка.
# На вхід програмі подається рядок, що складається не більше ніж з 255 символів. Надрукувати новий рядок.
# n = '   Beyond the green     swelling hills of the     Mittel Land rose mighty slopes of forest    up    to the lofty steeps of the Carpathians    themselves    '
# g = ' '.join(n.split())
# print(g.strip())
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#339. Дано вираз, який має один з наступних виглядів: 'A+B', 'A-B' або 'A*B', де A і B - цілі числа від 0 до 1000000000. Визначте значення цього виразу.
# n = '33+16'
#
# if '*' in n:
#     a = n.split('*')
#     print(int(a[0]) * int(a[1]))
# elif '+' in n:
#     a = n.split('+')
#     print(int(a[0]) + int(a[1]))
# elif '-' in n:
#     a = n.split('-')
#     print(int(a[0]) - int(a[1]))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#340. Дано рядок, який, можливо, містить пропуски. Переведіть усі символи цього рядка в нижній регістр.
# n = 'Hearts of Three, by Jack London'
# print(n.lower())
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#341. Виведіть поспіль, без пропусків, усі символи, що лежать в таблиці ASCII між двома заданими символами.
# Програма отримує на вхід два символу, кожен в окремому рядку і повинна вивести рядок, що починається першим із заданих символів і закінчується другим.
# a = 'A'
# b = 'F'
# lst = []
# for i in range(ord(a), ord(b)+1):
#     lst.append(chr(i))
# g = ''.join(lst)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#342. Дано рядок, що складається з слів, розділених пропусками. Визначте кількість слів у рядку.
# n = 'Events happened very rapidly with Francis Morgan that late spring morning'
# a = n.split()
# print(len(a))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#343. Дано рядок. Визначити число пропусків в ньому.
# n = 'After his hunger and thirst were satisfied, Robinson thought he would try to find another dwelling place'
# count = 0
# for i in n:
#     if i.isspace():
#         count += 1
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#344. Напишіть програму для друку таблиці індексів і значень символів у введеному користувачем рядку.
# n = 'Ruby'
# f = 0
# for i in n:
#     print(f, i)
#     f += 1
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#345. Напишіть програму, яка друкує введений користувачем рядок у верхньому регістрі для перших n символів у рядку.
# s = "It was early on a fine summer's day, near the end of the eighteenth century, when a young man, of genteel appearance, journeying towards the north-east of Scotland"
# n = 36
# count = 0
# lst = []
#
# for i in s:
#     count += 1
#     if count < n:
#         lst.append(i.upper())
#     else:
#         lst.append(i)
# g = ''.join(lst)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#346.Напишіть програму, щоб отримати рядок із введеного користувачем рядка, де всі входження першого символа у рядку змінилися на рядок *HIDE*, за винятком першого.
# s = 'Endless clouds drifted back and forth, blotting out the RED SUN'
# lst = []
# lst.append(s[0])
# for i in s[1:]:
#     if i.lower() == s[0].lower():
#         i = '*HIDE*'
#     lst.append(i)
# g = ''.join(lst)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#347. Напишіть програму для розрахунку довжини рядка без використання функції len().
# n = 'pythonguide.pp.ua'
# count = 0
# for i in n:
#     count += 1
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#348. Напишіть програму, яка по введеному числу n від 1 до 9 виводить на екран n прапорців з відповідними номерами.
# Зображення одного прапорця має розмір 4 x 4 символи, між двома сусідніми прапорцями також є порожній (з пропусків) стовпець.
# Дозволяється вивести порожній стовпець після останнього прапорця.
# Усередині кожного прапорця повинен бути записаний його номер - число від 1 до n.
# n = 5
#
# a = '+___ '
# b = '|  / '
# c = '|__\\ '
# d = '|    '
# lst = []
# for i in range(1, n+1):
#     g = f'|{str(i)} / '
#     lst.append(g)
# g = ''.join(lst)
# print(a * n)
# print(g)
# print(c * n)
# print(d * n)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#349. Дано рядок, що складається з рівно двох слів, розділених пропуском.
# Надрукуйте новий рядок, у якому позиції першого та другого слова змінені (друге слово друкується спочатку).
# У завданні не можна використовувати цикли і вказівку «якщо».
# s = 'Ubuntu Linux'
# a = s.split()
# b = a[1] + ' ' + a[0]
# print(b)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#351. Дано послідовність символів, що має вигляд p1*p2*...*pn, де pn - цифра. Обчисліть значення виразу.
# s = '2*5*7'
# a = s.split('*')
#
# lst = []
# for i in a:
#     lst.append(int(i))
#
# b = 1
# for i in lst:
#     b *= i
# print(b)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#252. Користувач вводить рядок і один символ. Напишіть програму для підрахунку кількості входження символа в рядок.
# У випадку, якщо введений символ є літерою, великі і малі букви розрізняються.
# s = 'Poirot shook his head energetically. He was now arranging his moustache with exquisite care.'
# f = 'h'
# count = 0
#
# for i in s:
#     if i == f:
#         count += 1
#
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#353. Користувач вводить рядок і певний номер n символа у ньому.
# Напишіть програму для видалення n-го символу з не порожнього рядка.
# Цикли і вказівку «якщо» для розв’язування задачі використовувати не можна.
# s = 'Poirot stopped for a moment, and gazed sorrowfully over the beautiful expanse of park, still glittering with morning dew.'
# n = 27
# print(s[:n] + s[n+1:])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#354. Напишіть програму для перевірки чи є введена літера голосною або приголосною.
# s = 'E'
#
# o = ['a', 'e', 'i', 'o', 'u', 'y']
# if s.lower() in o:
#     print(f'{s} is a vowel ')
# else:
#     print(f'{s} is a consonant')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#355. Вводиться додатне дійсне число, надрукуйте його першу цифру справа від десяткової точки.
# n = 100.89
# a = str(n).split('.')
# del a[0]
# g = ''.join(a)
# print(g[0])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#356. При заданому користувачем значенні цілого числа n ≥ 2 обчислити суму 1 x 2 + 2 x 3 + ... + (n - 1) x n.
# Відповідь виведіть у вигляді обчисленого виразу і його значення в точності, як показано у вихідних даних.
# n = 5
#
# lst = list(range(1, n))
# lst_f = list(range(2, n+1))
# lst_g = []
# d = 0
# f = ''
#
# for i in lst:
#     d = i * lst_f[0]
#     lst_g.append(d)
#     f += f'+{i}*{lst_f[0]}'
#     del lst_f[0]
#
# print(f'{f[1:]}={sum(lst_g)}')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#357. Напишіть програму для видалення символів, які мають непарні значення індексів у введеному користувачем рядку.
# s = 'kangaroo'
# print(s[::2])
#
# s = 'kangaroo'
# lst = []
# for i in range(len(s)):
#     if i%2 == 0:
#         lst.append(s[i])
# g = ''.join(lst)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#358. Користувач вводить рядок одноцифрових чисел без пропусків. Напишіть програму для обчислення суми цих чисел.
# n = '12sd3f9g'
# lst = []
# for i in n:
#     if i.isdigit():
#         lst.append(int(i))
# print(sum(lst))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#359. Напишіть програму, яка зчитує рядок, введений користувачем, що містить дату у формі mm/dd/yyyy.
# Програма має вивести на екран дату у вигляді Місяць Число, Рік.
# s = '02/29/2022'
# f = s.split('/')
# m = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
# print(f'{m[int(f[0]) - 1]} {f[1]}, {f[2]}')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#360. Вводиться рядок. Необхідно видалити з нього всі пропуски.
# Після цього визначити, чи є він паліндромом, тобто однаково пишеться як зліва направо, так і справа наліво.
# Програма має вивести Yes, якщо слово є паліндромом, або No у протилежному випадку.
# s = 'Never     odd   or        even'
# lst = []
#
# for i in s:
#     if i.isalnum():
#         lst.append(i.lower())
#
# if lst == lst[::-1]:
#     print('YES')
# else:
#     print('NO')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#361. Код Морзе - це код, в якому кожна буква алфавіту (наприклад, англійського),
# кожна цифра та різні знаки пунктуації представляються набором крапок і дефісів.
# Напишіть програму, яка перетворює рядок, введений користувачем, в код Морзе (таблицю значення кодів Морзе знайдіть в Інтернеті).
# s = 'Python is one of the best'
#
# abcd = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',
#         'X', 'Y','Z', ' ' ]
# dotcom = ['.-', '-...', '-.-.', '-..', '.', '..-.', '--.', '....', '..', '.---', '-.-', '.-..', '--', '-.', '---', '.--.',
#           '--.-', '.-.', '...', '-', '..--', '...-', '.--', '-..-','-.--','--..', '\n' ]
#
# lst = []
# lst_f = []
#
# for i in s:
#     if i.upper() in abcd:
#         lst.append(abcd.index(i.upper()))
#
# for i in lst:
#     lst_f.append(dotcom[i])
#
# g = ''.join(lst_f)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#362. Напишіть програму, яка зчитує рядок, введений користувачем, та визначає у ньому: кількість великих літер, кількість малих літер, кількість символів пропуску.
# s = 'By Red Flower Bagheera meant fire, only no creature in the jungle will call fire by its proper name.'
#
# upper = 0
# lower = 0
# spaces = 0
#
# for i in s:
#     if i.isspace():
#         spaces += 1
#     elif i.islower():
#         lower += 1
#     elif i.isupper():
#         upper += 1
# print(f'Upper {upper}\nLower {lower}\nSpaces {spaces}')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#363. Визначити, чи є введене слово ідентифікатором, тобто починається воно з літери англійського алфавіту (малої або великої)
# або знака підкреслення і не містить інших символів, крім букв англійського алфавіту (в будь-якому регістрі), цифр і знака підкреслення.
# s = '_myCla*ss2'
#
# b = list(range(65,91))
#
# lst_b = []
#
# for i in b:
#     lst_b.append(chr(i))
#
# if (s[0].upper() in lst_b or s[0] == '_') and s[1:].isalnum():
#     print('YES')
# else:
#     print('No')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#364. Вводиться рядок. Потрібно видалити з нього повторювані символи і всі пропуски.
# s = 'aaa'
# lst = []
# lst_f = []
# for i in s:
#     if i.isalnum():
#         lst.append(i)
#
# for i in lst:
#     if i not in lst_f:
#         lst_f.append(i)
# g = ''.join(lst_f)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#365. Користувач вводить рядок, у якому містяться слова, знаки пунктуації, причому усі слова записуються разом
# і перша літера кожного слова є великою. Напишіть програму, яка виводить рядок, у якому введені слова розділені пропусками.
# s = 'TheOldSeaDogAtTheAdmiralBenbow'
# lst = []
#
# for i in s:
#     if i.isupper():
#         lst.append(f' {i}')
#     else:
#         lst.append(i)
# g = ''.join(lst)
# print(g[1:])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#366. Знайти у рядку зазначений підрядок і замінити його на новий.
# Рядок, підрядок для заміни та новий рядок вводить користувач.
# Розгляньте випадок заміни усіх підрядків.
# Також необхідно врахувати випадок відсутності підрядка, який необхідно замінити (вивести is impossible).
# n = '12 45 32 567 32 109'
# a = '32'
# b = '-1'
# if a in n:
#     print(n.replace(a, b))
# else:
#     print('error')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#367. Напишіть програму, яка дає користувачеві можливість вводити рядок і відображає символ, який найчастіше з’являється у рядку та кількість його входжень.
# Якщо у рядку є кілька таких символів, необхідно врахувати лише перший з них.
# s = 'Black Dog Appears and Disappears'
# lst = []
#
# for i in s:
#     if i not in lst:
#         lst.append(i)
#
# for_letter = []
# for_num = []
# for i in lst:
#     count = 0
#     for w in s:
#         if i == w:
#             count += 1
#     if i == ' ':
#         i = 'пропуск'
#     for_letter.append(i)
#     for_num.append(count)
#
# max_index_in_num = for_num.index(max(for_num))
# letter_for_max_index = for_letter[max_index_in_num]
# print(letter_for_max_index, max(for_num))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#368.Користувач вводить рядок і певний символ. Напишіть програму, яка друкує місця розташування (індекси) першої та
# останньої появи введеного символа. Якщо символ зустрічається лише один раз, то виведіть його індекс.
# Якщо символ не зустрічається, надрукуйте missing. У цьому завданні не можна використовувати цикли.
# s = '9965 GNU'
# a = '9'
#
# if a in s:
#     d = s.find(a)
#     f = s.rfind(a)
#     if d == f:
#         print(d)
#     else:
#         print(d, f)
# elif a not in s:
#     print('missig')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#369. Користувач вводить рядок і певний символ. Напишіть програму, яка друкує індекс розташування другої появи введеного символа у рядку.
# Якщо рядок містить введений символ лише один раз, то надрукуйте -1, а якщо рядок не містить шуканого символа, то надрукуйте -2.
# s = "The morning's sun rose clear and resplendent, touching the foamy waves into a network of ruby-tinted light."
# f = 'x'
# count = -1
# lst = []
# for i in s:
#     count += 1
#     if i == f:
#         lst.append(count)
#
# if len(lst) == 1:
#     print('-1')
# elif len(lst) > 1:
#     print(lst[1])
# elif f not in s:
#     print('-2')
#
#
# s = "The morning's sun rose clear and resplendent, touching the foamy waves into a network of ruby-tinted light."
# f = 's'
# f_index = s.find(f)
# s_index = s.find(f, f_index +1 )
# print(s_index)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#370. Користувач вводить рядок і певний символ, який устрічається у рядку щонайменше двічі.
# Напишіть програму, яка видалить із введеного рядка перше і останнє входження символа, а також всі символи між ними.
# s = 'We left in pretty good time, and came after nightfall to Klausenburgh. Here I stopped for the night at the Hotel Royale.'
# f = 'u'
#
# print(s[:s.find(f)]+s[s.rfind(f)+1:])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#371. Дано рядок. Якщо в цьому рядку певний символ зустрічається тільки один раз, виведіть його індекс.
# Якщо він зустрічається два і більше разів, виведіть індекс його першої і останньої появи.
# Якщо символ в цьому рядку не зустрічається, нічого не виводьте.
# s = ('In the centre of the room, clamped to an upright easel, stood the full-length portrait of a young man '
#      'of extraordinary personal beauty, and in front of it, some little distance away, was sitting the artist himself,'
#      ' Basil Hallward, whose sudden disappearance some years ago caused, at the time, such public excitement and '
#      'gave rise to so many strange conjectures.')
# f = 'm'
# if f not in s:
#     quit()
# elif s.find(f) == s.rfind(f):
#     print(s.find(f))
# elif s.find(f) != -1 and s.rfind(f) != -1:
#     print(s.find(f), s.rfind(f))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#372. Дано рядок нулів та одиниць. Напишіть програму для знаходження найдовшої неперервної послідовності нулів у рядку.
# s = '100001001010'
# count = 0
# lst = []
# for i in s:
#     if i == '0':
#         count += 1
#     else:
#         lst.append(count)
#         count = 0
# print(lst)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# 373. Вводиться рядок. Необхідно визначити в ньому відсотки малих і великих букв.
# s = 'Hello, Guido!'
# lst_for_smole = []
# lst_for_big = []
#
# for i in s:
#     if i.islower():
#         lst_for_smole.append(1)
#     elif i.isupper():
#         lst_for_big.append(1)
#
# all_letters = sum(lst_for_big) + sum(lst_for_smole)
# print(sum(lst_for_smole)/all_letters*100,'%', '- smole letters')
# print(sum(lst_for_big)/all_letters*100,'%', '- big letters')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#374. Дано два слова. Складіть програму, що визначає чи можна чи ні з букв слова A скласти слово B.
# Програма має враховувати регістр літер введених слів.
# s_1 = 'Ruby'
# s_2 = 'Buy'
# lst = []
# for i in list(s_2):
#     if i in list(s_1):
#         lst.append(1)
#     else:
#         lst.append(0)
#
# if len(lst) == sum(lst):
#     print('YES')
# else:
#     print('NO')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#375.В операційній системі Windows шлях до файлу складається з імені логічного диска і назв каталогів, в яких знаходиться цей файл.
# Частини шляху розділені знаками \ (зворотний слеш). Потрібно розбити заданий шлях до файлу на частини - ім’я диска і назви каталогів.
# Програма повинна вивести ім’я диска і назви всіх каталогів, що становлять шлях. Кожен елемент виводиться в окремому рядку.
# Використовувати модулі не можна.
# s = 'C:\\Python36\\python.exe'
# for i in s.split('\\'):
#     print(i)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#376. Дано рядок і символ, який зустрічається у рядку принаймні два рази.
# Напишіть програму, яка надрукує новий рядок (на основі введеного користувачем), у якому послідовність символів,
# що містяться між першою і останньою появою введеного символа, буде записана у зворотному порядку.
# s ='Complex is better than complicated.'
# f = 'a'
# n = s[s.find(f):s.rfind(f)+1]
# print(s[:s.find(f)] + n[::-1] + s[s.rfind(f)+1:])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#377. Користувачем вводиться рядок і буква, що зустрічається у рядку принаймні три рази.
# Напишіть програму, яка замінить кожне входження букви у нижньому регістрі на цю ж букву у верхньому регістрі, за винятком першого і останнього.
# s = 'There should be one-- and preferably only one --obvious way to do it.'
# f = 'n'
# print(s)
# n = s[s.find(f)+1:s.rfind(f)]
#
# lst = []
# for i in n:
#     if i == 'n':
#         i = i.upper()
#     lst.append(i)
#
# g = ''.join(lst)
#
# print(s[:s.find(f)+1] + g + s[s.rfind(f):])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#378. Дано рядок. Розріжте його на дві «рівні» частини (якщо довжина рядка непарна, помістіть центральний символ у першу частину,
# так що перша частина міститиме на один символ більше, ніж друга частина). Тепер надрукуйте новий рядок,
# у якому перша та друга половини обмінялися місцями (не використовуйте вказівку «якщо» для цього завдання).
# import math
# s = 'town'
# print(s)
# a = s[:math.ceil(len(s)/2)]
# b = s[math.ceil(len(s)/2):]
# print(b+a)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#379. Дано послідовність символів довжини n (n ≥ 1). Перевірити баланс круглих дужок в цьому виразі (кожна відкита дужка має свою закриту дужку).
# Наприклад, при введенні виразу (()) () програма повинна повідомити про правильність розстановки дужок (True),
# а при введенні виразу ((()) - про неправильність (False). Напишіть програму, яка може перевіряти баланс дужок в арифметичних виразах, тексті і т. д.
# s = '(3y + 21)(12 - (x + 5))'
#
# lst = []
# for i in s:
#     if i == '(':
#         lst.append(1)
#     elif i == ')':
#         lst.append(1)
#
# if sum(lst)%2 == 0:
#     print(sum(lst)%2 == 0)
# else:
#     print(sum(lst) % 2 == 0)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#380. Дано рядок, що складається з n цифр (тобто одноцифрових чисел), між якими стоїть n-1 знаків операцій,
# кожна з яких може бути або +, або -. Обчисліть значення цього виразу. Програма має надрукувати результат обчислення цього виразу.
# s = '5-3+1'
# res = int(s[0])
# print(res)
#
# for i in range(1, len(s), 2):
#     print(s[i], s[i+1])
#     op = s[i]
#     num = int(s[i+1])
#     if op == '-':
#         res -= num
#     elif op == '+':
#         res += num
#
# print(res)
#
# s = '5-3+1'
# print(eval(s))
#381. Капітан Флінт закопав скарб на Острові скарбів. Він залишив опис, як знайти скарб. Опис складається з рядків виду:
# North 5, де перше слово - одне з North, South, East, West, а друге число - кількість кроків, яку потрібно пройти в цьому напрямку.
# Напишіть програму, яка за описом шляху до скарбу визначає точні координати скарбу, вважаючи,
# що початок координат знаходиться на початку шляху, вісь OX спрямована на схід, вісь OY - на північ.
# Програма отримує на вхід послідовність рядків зазначеного виду, а введення завершується рядком зі словом Treasure!.
# Програма має вивести два цілих числа в один рядок з пропуском між ними - координати скарбу
#
# x = 0
# y = 0
#
# while True:
#     num = input('enter: ')
#     if num == 'Treasure!':
#         break
#
#     if num.split()[0] == 'East':
#         x += int(num.split()[1])
#
#     elif num.split()[0] == 'West':
#         x -= int(num.split()[1])
#
#     elif num.split()[0] == 'North':
#         y += int(num.split()[1])
#
#     elif num.split()[0] == 'South':
#         y -= int(num.split()[1])
#
# print(x, y)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#382.Напишіть програму, на вхід якої даються чотири числа a, b, c і d, кожне у своєму рядку.
# Програма повинна вивести фрагмент таблиці множення для всіх чисел відрізка [a; b] на всі числа відрізка [c; d].
# Числа a, b, c і d є натуральними і не перевищують 10, a ≤ b, c ≤ d. Дотримуйтесь формату виведення як у вихідних даних.
# Для поділу елементів всередині рядка використовуйте \t - символ табуляції.
# Зауважте, що лівим стовпчиком і верхнім рядком виводяться самі числа із заданих відрізків.
# a = 1
# b = 10
# c = 1
# d = 10
# lst = []
# for i in range(c,d+1):
#     lst.append('\t'+str(i))
# g = ''.join(lst)
# print('\033[44;30m{}\033[0m'.format(g))
# for i in range(a,b+1):
#     lst_for_w = []
#     for w in range(c,d+1):
#         w *= i
#         lst_for_w.append('\t' + str(w))
#     g_for_w = ''.join(lst_for_w)
#     print('\033[43;30m{}\033[0m'.format(i), g_for_w)
#
# print("\033[44m{}\033[0m".format("putin xuylo"), 'hello')
# print('\033[43mputin sdox\033[0m')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#383. Напишіть програму для друку літери A за допомогою введеного користувачем символа.
# s = '*'
#
# print(f' {s}{s}{s} ')
# print(f'{s}   {s}')
# print(f'{s}   {s}')
# print(f'{s}{s}{s}{s}{s}')
# print(f'{s}   {s}')
# print(f'{s}   {s}')
# print(f'{s}   {s}')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#384. Напишіть програму для друку літери M за допомогою введеного користувачем символа.
# s = '%'
# a = (f"""
# {s}   {s}
# {s}   {s}
# {s}{s} {s}{s}
# {s} {s} {s}
# {s}   {s}
# {s}   {s}
# {s}   {s}
#      """)
# print(a)
#
# f = '@'
# lst = [
#     f'{f}   {f}',
#     f'{f}   {f}',
#     f'{f}{f} {f}{f}',
#     f'{f} {f} {f}',
#     f'{f}   {f}',
#     f'{f}   {f}',
#     f'{f}   {f}'
# ]
# for i in lst:
#     print(i)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#385. Дано рядок, що є параграфом в тексті.
# Текст необхідно відформатувати так, щоб довжина кожного рядка не перевищувала числа m, слова при цьому не розривати.
# На вхід програмі спочатку подається число m (0 < m ≤ 255). У наступному рядку знаходиться вхідний текст.
# Довжина слів в ньому не перевищує m, слова розділені рівно одним пропуском.
# Виведіть розбиття цього тексту на рядки довжиною не більше ніж m символів (слово переноситься на наступний рядок
# тільки якщо в поточному рядку його розмістити вже неможливо). Новий рядок не повинен починатися з пропуску.
# n = 10
# s = 'The Wonderful Wizard of Oz'
# print(s)
# a = s.split()
# print(a)
#
# lst = []
# st = ''
#
# for i in a:
#     if len(st) == 0:
#         st = i
#     elif len(st) + len(i) + 1 <= n:
#         st += ' '+i
#     else:
#         lst.append(st)
#         st = i
# if st:
#     lst.append(st)
#
# for i in lst:
#     print(i)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#386. Послідовності із символів 0 і 1 називаються бінарними. Вони широко застосовуються в інформатиці.
# Одне з незручностей бінарних послідовностей – їх важко запам’ятовувати.
# Для вирішення цієї проблеми був запропонований такий спосіб їх стиснення:
# переглядаючи послідовність зліва направо,
# виконується заміна 1 на a, 01 на b, 001 на c, ..., 00000000000000000000000001 на z.
# Напишіть програму, яка допоможе автоматизувати такий процес заміни.
# s = '1001101'
# alphabet = 'abcdefghijklmnopqrstuvwxyz'
# lst = []
# l = ''
# for i in s:
#     if i == '1':
#         l += i + ' '
#     else:
#         l += i
#
# a = l.split()
# lst_f = []
# for i in a:
#     lst_f.append(alphabet[len(i)-1])
#
# g = ''.join(lst_f)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#387. Напишіть програму, яка зчитує рядок, кодує її запропонованим алгоритмом і виводить закодовану послідовність.
# Кодування повинно враховувати регістр символів.
# Правила кодування: групи однакових символів початкового рядка замінюються на цей символ і кількість його повторень в цій позиції рядка.
# Наприклад: рядок aaaabbbсaa кодується в a4b3с1a2.
# s ='Hello'
# count = 1
# s_char = s[0]
# lst = []
# for i in range(1, len(s)):
#     if s[i] == s_char:
#         count += 1
#     else:
#         lst.append(s_char + str(count))
#         s_char = s[i]
#         count = 1
# lst.append(s_char + str(count))
#
# g = ''.join(lst)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#388.На вхід програми подається два рядка A і B, що складаються з малих букв англійського алфавіту. Виведіть кількість входжень рядка B в рядок A.
# a = 'abababa'
# b = 'aba'
# s = list(a)
# count = 0
#
# while s:
#     g = ''.join(s)
#     if g.startswith(b):
#         count += 1
#     del s[0]
#
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#389.Користувач вводить рядок цифр без пропусків.
# Необхідно написати програму, яка «розіб’є» це число на трійки цифр справа наліво комами.
# Якщо число містить менше трьох цифр, то воно виводиться без змін.
# n = '2348906'
# print(f"{int(n):,}")
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#390. Дано слово, що складається лише з малих англійських літер.
# Визначте, яку найменшу кількість літер потрібно дописати до цього слова праворуч так, щоб воно стало паліндромом.
# s = 'NASA'
#
# print(s.lower())




#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#391.




























































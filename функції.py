#607. Напишіть функцію, яка отримує ім’я і друкує вітальне повідомлення.
# def some_name(name):
#     print(f'Hello, {name}')
#
#
# some_name('Alex')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#608. Напишіть функцію, яка отримує рядок і ціле число n та повертає n копій заданого рядка.
# def coping(num, s):
#     print(s * num)
#
#
# coping(3, 'I love coding')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#609. Напишіть функцію для обчислення суми двох цілих чисел.
# def amounts(a, b):
#     res = a + b
#     return res
#
#
# print(amounts(2, 5))
#
# a = lambda x, y: x + y
# print(a(2, 5))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#610. Напишіть функцію для перетворення цілого числа в рядок.
# def transformation(n):
#     res = str(n)
#     return res
#
#
# print(f"'{transformation(8)}'")
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#611. Напишіть функцію для отримання рядка з перших n символів іншого рядка. Якщо довжина рядка менше n, поверніть початковий рядок.
# def first_letters(n, s):
#     if len(s) < n:
#         print(s)
#     else:
#         print(s[ : n])
#
# first_letters(2, 'Java')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#612. Напишіть функцію для визначення більшого з двох цілих чисел без використання вбудованої функції max().
# Якщо числа рівні, то вивести повідомлення equal.
# def maximun_num(a, b):zrf ajhvekf dbpyfxtyyz nhbrenybrf pf cnjhjyfvb&
#     if a > b:
#         print(a)
#     elif a < b:
#         print(b)
#     elif a == b:
#         print('equal')
#

# maximun_num(3, 3)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#613. Напишіть функцію для визначення найбільшого з трьох цілих чисел з використанянм вбудованої функції max().
# def maximun_num(a, b, c):
#     print(max([a, b, c]))
#
#
# maximun_num(1, 1, 1)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#614. Напишіть функцію, яка перевіряє, чи існує трикутник із введеними сторонами a, b, c.
# def is_a_triangle(a, b, c):
#     if a + b > c and a + c > b and b + c > a:
#         print('True')
#     else:
#         print("False")
#
#
# is_a_triangle(1, 2, 4)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#615. Напишіть функцію, яка отримує два слова, об’єднує їх за допомогою пропуску і друкує результат об’єднання.
# def two_words(a, b):
#     print(a + ' ' + b)
#
# two_words('Hello', 'World')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#615. Напишіть функцію, яка отримує 3 аргументи: перші 2 - числа, третій - операція (+, -, *, /), яка повинна бути проведена над ними.
# У випадку невідомої операції, функція повертає рядок Unknown operation. Результатом має бути дійсне число з двома знаками після десяткової крапки.
# def calculator(a, b, c):
#     if c == '+':
#         res = a + b
#     elif c == '-':
#         res = a - b
#     elif c == '*':
#         res = a * b
#     elif c == '/':
#         if b == 0:
#             return "Can't do that"
#         res = a / b
#     else:
#         return "Unknown operatoine"
#
#     return f"{res:.2f}"
#
#
# a = int(input())
# b = int(input())
# c = input()
#
# print(calculator(a, b, c))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#617. Напишіть функцію, яка перевіряє, чи подана послідовність порожня чи ні.
def is_empty(*args):
    if len(args) == 0:
        print('False')
    else:
        print('True')


is_empty()



























































































































































































































































































































































































































































































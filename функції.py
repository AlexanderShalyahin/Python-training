#607. Напишіть функцію, яка отримує ім’я і друкує вітальне повідомлення.
# def some_name(name):
#     print(f'Hello, {name}')
#
#
# some_name('Alex')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#608. Напишіть функцію, яка отримує рядок і ціле число n та повертає n копій заданого рядка.
# def coping(num, s):
#     print(s * num)
#
#
# coping(3, 'I love coding')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#609. Напишіть функцію для обчислення суми двох цілих чисел.
# def amounts(a, b):
#     res = a + b
#     return res
#
#
# print(amounts(2, 5))
#
# a = lambda x, y: x + y
# print(a(2, 5))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#610. Напишіть функцію для перетворення цілого числа в рядок.
# def transformation(n):
#     res = str(n)
#     return res
#
#
# print(f"'{transformation(8)}'")
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#611. Напишіть функцію для отримання рядка з перших n символів іншого рядка. Якщо довжина рядка менше n, поверніть початковий рядок.
# def first_letters(n, s):
#     if len(s) < n:
#         print(s)
#     else:
#         print(s[ : n])
#
# first_letters(2, 'Java')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#612. Напишіть функцію для визначення більшого з двох цілих чисел без використання вбудованої функції max().
# Якщо числа рівні, то вивести повідомлення equal.
# def maximun_num(a, b):zrf ajhvekf dbpyfxtyyz nhbrenybrf pf cnjhjyfvb&
#     if a > b:
#         print(a)
#     elif a < b:
#         print(b)
#     elif a == b:
#         print('equal')
#

# maximun_num(3, 3)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#613. Напишіть функцію для визначення найбільшого з трьох цілих чисел з використанянм вбудованої функції max().
# def maximun_num(a, b, c):
#     print(max([a, b, c]))
#
#
# maximun_num(1, 1, 1)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#614. Напишіть функцію, яка перевіряє, чи існує трикутник із введеними сторонами a, b, c.
# def is_a_triangle(a, b, c):
#     if a + b > c and a + c > b and b + c > a:
#         print('True')
#     else:
#         print("False")
#
#
# is_a_triangle(1, 2, 4)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#615. Напишіть функцію, яка отримує два слова, об’єднує їх за допомогою пропуску і друкує результат об’єднання.
# def two_words(a, b):
#     print(a + ' ' + b)
#
# two_words('Hello', 'World')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#615. Напишіть функцію, яка отримує 3 аргументи: перші 2 - числа, третій - операція (+, -, *, /), яка повинна бути проведена над ними.
# У випадку невідомої операції, функція повертає рядок Unknown operation. Результатом має бути дійсне число з двома знаками після десяткової крапки.
# def calculator(a, b, c):
#     if c == '+':
#         res = a + b
#     elif c == '-':
#         res = a - b
#     elif c == '*':
#         res = a * b
#     elif c == '/':
#         if b == 0:
#             return "Can't do that"
#         res = a / b
#     else:
#         return "Unknown operatoine"
#
#     return f"{res:.2f}"
#
#
# a = int(input())
# b = int(input())
# c = input()
#
# print(calculator(a, b, c))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#617. Напишіть функцію, яка перевіряє, чи подана послідовність порожня чи ні.
# def is_empty(*args):
#     if len(args) == 0:
#         print('False')
#     else:
#         print('True')
#
#
# is_empty()
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#618. Напишіть функцію, яка до введеного рядка на початку додає рядок Is. Якщо даний рядок вже починається з Is, то початковий рядок виводиться без змін.
# def is_add(s):
#     if s.startswith('Is'):
#         print(s)
#     else:
#         print(f'Is {s}')
#
#
# is_add('Is empty')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#619. Напишіть функцію для перевірки того, чи введена літера є голосною чи приголосною.
# def vowel_or_consonant(l):
#     if l in 'aeiouyAEIOUY':
#         print('True')
#     else:
#         print('False')
#
#
# vowel_or_consonant('t')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#620. Напишіть функцію для створення позначок тегів HTML навколо введених рядків. Функція отримує назву тега HTML і рядок, який необхідно помістити у відповідні теги.
# def html_tag(s):
#     parts = s.split(maxsplit=1)
#     tag = parts[0]
#     body = parts[1]
#     print(f'<{tag}>{body}</{tag}>')
#
#
# html_tag('strong Python')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#621. Напишіть функцію, яка приймає два слова в якості вхідних даних, і надрукуйте найдовше слово.
# Якщо слова мають однакову довжину, то функція повинна надрукувати слова в окремих рядках.
# def longest_word(s):
#     lst = []
#     words = s.split()
#     max_len = max(len(word) for word in words)
#     for word in s.split():
#         if len(word) == max_len:
#             lst.append(word)
#
#     for i in lst:
#         print(i)
#
#
# longest_word('five three Spotify')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#622. Напишіть функцію, яка повертає назву пори року для введеного значення номера місяця.
# def seasons(n):
#     dict_season = {'spring': (3, 4, 5), 'summer': (6, 7, 8), 'autumn': (9, 10, 11), 'winter': (12, 1, 2)}
#     for k, v in dict_season.items():
#         if n in v:
#             print(k)
#             break
#     else:
#         print('unknown')
#
#
# seasons(15)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#623. Напишіть функцію, яка повертає зі списку найменше і найбільше числа.
# def min_and_max_num(lst):
#     print((min(lst), max(lst)))
#
#
# lst = [61, 9, -5, 23, 15, 44, 31, 10, -14, 7, 8]
# min_and_max_num(lst)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#624. Напишіть функцію для вставки рядка всередину іншого рядка.
# def within(a, b):
#
#     bifore = a[:(len(a)//2)]
#     after = a[(len(a)//2):]
#     print(f'{bifore}{b}{after}')
#
#
# within('qwerty', 'HTML')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#625. Напишіть функцію для перетворення літер введеного рядка у великі, якщо він містить принаймні n великих літер в перших m символах.
# Спочатку вводиться сам рядок, а в з нового рядка - числа n і m.
# def letter_conversion(word, nums):
#     first_l = nums[1]
#     big_l = nums[0]
#     count_for_big = 0
#     for l in word[:first_l]:
#         if l.isupper():
#             count_for_big += 1
#
#     if count_for_big >= big_l:
#         print(word.upper())
#     else:
#         print(word)
#
#
# word = input()
# num = input()
# nums = [int(n) for n in num.split()]
#
# letter_conversion(word, nums)




































































































































































































































































































































































































































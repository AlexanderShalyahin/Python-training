#203. Виведіть повідомлення Hello, Python! на екран n разів (n - ціле число, яке вводить користувач).
# nym = int(input(': '))
# for i in range(nym):
#     print('Hello, Python!')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#204. Дано два цілих числа a і b (a ≤ b). Виведіть всі числа від a до b включно.
# a = 5
# b = 21
# lst = []
#
# for i in range(a-1, b):
#     i += 1
#     lst.append(str(i))
#
# new_lst = ' '.join(lst)
# print(new_lst)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#205.Напишіть програму-таймер зворотного відліку, яка запитує у користувача кількість секунд n, з якої слід починати відлік.
#
# n = 10
#
# for i in range(n+1, 1, -1):
#     i-=1
#     print(i)
# print('Start!')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#206. Користувач вводить кількість навчальних предметів n, а потім, відповідно, оцінки учня з n навчальних предметів.
# Визначте середню оцінку.
# num = int(input('predmet: '))
# v = 0
# for i in range(num):
#     i = int(input(': '))
#     v += i
# c = v / num
# print(f'{c:.2f}')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#207. Надрукувати у рядку m разів число n. Числа m і n - цілі числа, які вводить користувач у порядку n, m.
# m = 10
# n = 5
# v = []
# d = str(m)
# for i in range(n):
#     v.append(d)
# c = ' '.join(v)
# print(c)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#209. Напишіть програму для друку цілих чисел від n до 0 із виведенням біля кожного числа кількості символів #,
# що дорівнює значенню числа.
# n = 6
# c = '#'
# for i in range(n+1, 1, -1):
#     i -= 1
#     b = i * c
#     print(i, b)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#110. Визначити суму всіх чисел від 1 до n (1 ≤ n ≤ 100).
# n = 100
# v = 0
# for i in range(n+1):
#     v += i
# print(v)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#211. Напишіть програму для побудови шаблону як у вихідних даних за введеним значенням n.
# 1
# 22
# 333
# 4444
# 55555
# 666666
# 7777777
# 88888888
# 999999999
# n = 9
# m = 0
# for i in range(n):
#     m+=1
#     p = str(m) * m
#     print(p)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#213. Напишіть програму для побудови шаблону як у вихідних даних за введеним значенням n.
##
# #
#  #
#   #
#    #
# n = 5
# m = '#'
# c = ' '
#
# for i in range(n):
#     p = m + c*i + m
#     print(p)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#214. Напишіть програму, яка підраховує додатні і від’ємні числа, а також нулі, введені користувачем,
# і виводить їхню кількість в один рядок з одним пропуском між ними.
#
# numbers_list = []
# positive = 0
# negative = 0
# zero = 0
#
# while len(numbers_list) <= 5:
#     numbers = input('Enter: ')
#     numbers_list.append(numbers)
#
# for i in range(len(numbers_list)):
#     if int(numbers_list[i]) > 0:
#         positive += 1
#     elif int(numbers_list[i]) < 0:
#         negative += 1
#     elif int(numbers_list[i]) == 0:
#         zero += 1
#
# print(positive, negative, zero)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#215. Напишіть програму, яка друкує в дному рядку через пропуск усі парні числа від 1 до n
# (1 < n ≤ 100, n - ціле число, яке вводить користувач). Використайте оператор continue.
#
# number = int(input('Enter: '))
# lst = []
# for i in range(1, number+1):
#
#     if i%2 == 0:
#         lst.append(str(i))
#     else:
#         continue
# new_lst = ' '.join(lst)
# print(new_lst)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# 216. Надрукувати всі непарні двоцифрові числа, у яких остання цифра дорівнює n - ціле число, яке вводить користувач.
# number = int(input('Enter: '))
# lst = []
# for i in range(10, 100):
#     if i%2 != 0 and str(i)[1] == str(number):
#         lst.append(str(i))
#     elif number == 0 and i%10 == 0:
#         lst.append(str(i))
#
# new_lst = ' '.join(lst)
# print(new_lst)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#217. Надрукувати всі цілі числа від a до b включно, кратні деякому числу c. Числа a, b, c - цілі числа, які вводить користувач.
# a = int(input('Enter a: '))
# b = int(input('Enter b: '))
# c = int(input('Enter c: '))
# lst = []
#
# for i in range(a, b+1):
#     if i%c == 0:
#         lst.append(str(i))
#
# new_lst = ' '.join(lst)
# print(new_lst)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#218. Дано натуральне ціле додатнє число n. Визначити кількість цифр в ньому.
# num = 123
# count = 0
#
# for i in range(len(str(num))):
#     count += 1
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#219. Надрукувати квадрати усіх цілих чисел від 1 до n включно (значення n вводиться з клавіатури користувачем).
# num = 10
#
# for i in range(1, num+1):
#     i **= 2
#     print(i)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#220. Напишіть програму для друку чисел від 0 до n включно і виведення в один рядок через один пропуск (n - ціле число, яке вводить користувач).
# n = 3
# lst = []
#
# for i in range(n+1):
#     lst.append(str(i))
#
# new_lst = ' '.join(lst)
# print(new_lst)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#221. Надрукувати таблицю відповідності між масою у фунтах і масою в кілограмах для значень n фунтів (1 фунт = 453 г) у вигляді таблиці.
# n = 5
# kg  = 0.453
#
# for i in range(1 , n+1):
#     m_in_kg = i * kg
#     print(f'{i}     {m_in_kg:.2f}')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# 222. Напишіть програму, яка друкує цілі числа від 1 до n (1 < n ≤ 1000) з такою умовою:
# для чисел кратних 3 виводить *3* замість числа,
# для чисел кратних 5 друкує *5*,
# а для чисел, які кратні 3 і 5 одночасно, повідомлення буде *35*.
# n = 15
#
# for i in range(1, n+1):
#
#     if i%3 == 0 and i%5 == 0:
#         print('*35*')
#     elif i%3 == 0:
#         print('*3*')
#     elif i%5 == 0:
#         print('*5*')
#     else:
#         print(i)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#223. Напишіть програму, яка зчитує цілі числа, введені користувачем, по одному числу n в рядку.
# Для кожного введеного числа необхідно перевірити:
# якщо число менше 10, то пропускаємо це число;
# якщо число більше 100, то припиняємо зчитувати числа;
# в інших випадках вивести це число в окремому рядку.
# a = int(input('Enter a: '))
# b = int(input('Enter b: '))
# c = int(input('Enter c: '))
# d = int(input('Enter d: '))
# lst = [a, b, c, d]
#
# for i in lst:
#     if i < 10:
#         continue
#     elif i > 100:
#         continue
#     else:
#         print(i)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#225. Напишіть програму для створення таблиці множення (від 1 до 10) для введеного цілого числа n.
# n = 3
# for i in range(1, 11):
#     print(f'{n} * {i} = {n *i}')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#226. Знайти суму 12 + 22 + 32 + … + n2 при заданому користувачем значенні цілого числа n.
#
# n = 6
# g = 0
# for i in range(1, n+1):
#     i = i**2
#     g += i
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#228. Напишіть програму для обчислення виразу 1/2 + 2/3 + 3/4 + …​ + n/(n + 1) із заданим n, яке вводить користувач (n > 0).
# n = 10
# g = 0
#
# for i in range(1, n+1):
#     i = i / (i+1)
#     g += i
# print(f"{g:.2f}")
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#229. Визначити суму всіх трицифрових чисел, які діляться націло на n, де n - ціле число, яке вводить користувач.
# n = 440
# g = 0
#
# for i in range(100, 1000):
#     if i%n == 0:
#         g += i
#
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# 230. Напишіть програму, в якій користувач вводить цілі числа.
# Якщо буде введено ціле число n, програма має завершити своє виконання повідомленням Done.
# Спочатку користувач вводить число n, а потім решту чисел.
# lst = []
# while True:
#     n = int(input('Enter: '))
#     lst.append(n)
#     if len(lst) >= 2:
#         if lst[0] == lst[-1]:
#             print('Done')
#             break
#**********************************************************************************************************************
# n = int(input('Enter: '))
# while True:
#     b = int(input('ENTER: '))
#     if n == b:
#         print("Done")
#         break
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#231. Пароль доступу до комп’ютера зберігається у змінній n - ціле число, яке вводить користувач.
# Напишіть програму, яка запитує пароль в користувача.
# У разі введення користувачем неправильного пароля на екран має виводитися повідомлення Error,
# після чого дії повинні повторюватися до введення правильного значення.
# При успішній аутентифікації в ситемі має з’явитися повідомлення Done.
#
# pas = 12345
#
# while True:
#     n = int(input('Enter password: '))
#     if n == pas:
#         print('Done')
#         break
#     else:
#         print('Error')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#232. Дано n чисел. Визначте, скільки з них дорівнюють нулю, і виведіть цю кількість.
# Спочатку вводиться число n, потім вводиться рівно n цілих чисел.
#
# n = int(input('Enter a number: '))
# lst = []
# count = 0
#
# while len(lst) < n:
#     n_2 = int(input('Enter: '))
#     lst.append(n_2)
#
# for i in lst:
#     if i == 0:
#         count += 1
#
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#233. Дано n цілих чисел. Кожне число вводиться в окремому рядку. Обчисліть суму чисел.
# n = int(input('Enter a number: '))
# lst = []
# count = 0
#
# while len(lst) < n:
#     n_2 = int(input('Enter: '))
#     lst.append(n_2)
#
# for i in lst:
#     count += i
#
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#235. Біг на біговій доріжці дозволяє спалювати n калорій за хвилину.
# Напишіть програму, щоб відобразити кількість калорій, спалених протягом 10, 15, 20, 25 і 30 хвилин.
# n = 4.2
# lst = [10, 15, 20, 25, 30]
#
# for i in lst:
#     g = i * n
#     print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#236. Напишіть програму, яка виводить таблицю цілих значень температури не більше t (t ≥ 0) в градусах Цельсія (C) і
# відповідні значення за шкалою Фаренгейта (F) (F = 9*C/5 + 32).
# t = 10
#
# for i in range(t+1):
#     g = float((9 * i) / 5 + 32)
#     print('{0:<5} {1:<0.2f}'.format(i, g))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#237. Припускаючи, що рівень океану зараз зростає приблизно на n міліметрів на рік.
# Напишіть програму, яка відображатиме значення щорічного росту рівня океану протягом наступних m років.
# n = 1.6
# m = 5
#
# for i in range(1, m+1):
#     g = i * n
#     print('{0:<5} {1:0.2f}'.format(i, g))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#238. Надрукувати таблицю значень 1, 2, … n доларів США у переведенні на гривні за поточним курсом k (значення курсу вводиться з клавіатури).
#
# dol = 10
# gr = 42.5
#
# for i in range(1, dol+1):
#     g = i * gr
#     print('{0:<10} {1:0.2f}'.format(i, g))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#239. Намалювати сходинки як у вихідних даних, використовуючи символи пропуску і решітки #,
# коли на вхід програми подається ціле число n - кількість сходинок.
# n = 10
# c = '#'
#
# for i in range(1, n+1):
#     g = i * c
#     print(g.rjust(n))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#240. Напишіть програму для побудови шаблону як у вихідних даних за введеними значеннями n і m.
# n = 6
# m = 5
#
# for i in range(n+1):
#     a = (str(i)+'    ') * m
#     print(a)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#241. Напишіть програму для побудови шаблону як у вихідних даних за введеним значенням n.
# Вихідні дані:
#
# 1 	2 	3 	4 	5 	6 	7
# 2 	3 	4 	5 	6 	7
# 3 	4 	5 	6 	7
# 4 	5 	6 	7
# 5 	6 	7
# 6 	7
# 7
from operator import index

# n = 7
# lst = []
# for i in range(1, n+1):
#     lst.append(str(i))
#
# while lst:
#     b = ' '.join(lst)
#     print(b)
#     del lst[0]

#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#242. Дано два цілих числа a і b. Виведіть всі числа від a до b включно, в порядку зростання, якщо a < b,
# або в порядку спадання у іншому випадку.
# a = 12
# b = 1
# lst = []
# if a > b:
#     for i in range(a, b-1, -1):
#         lst.append(str(i))
#         c = ' '.join(lst)
#     print(c)
# else:
#     for i in range(a, b+1):
#         lst.append(str(i))
#         c = ' '.join(lst)
#     print(c)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#244. Надрукувати усі двоцифрові числа, сума квадратів цифр яких ділиться на n націло. Число n - ціле число, яке вводить користувач.
# n = 5
# lst = []
#
# for i in range(10, 100):
#     c = str(i)
#     v = int(c[0])**2 + int(c[1])**2
#     if v % n == 0:
#         lst.append(c)
#         b = ' '.join(lst)
#
# print(b)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#245. Напишіть програму, яка друкує усі непарні числа з інтервалу [1, b], де b - ціле число, яке вводить користувач.
# Не можна використовувати конструкцію розгалуження.
#
# b = 8
# lst = []
#
# for i in range(1, b+1, 2):
#     lst.append(str(i))
#     c = ' '.join(lst)
#
# print(c)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#246. За даним цілим додатнім числом n обчисліть n! - значення факторіалу цього числа.
# n = 4
# g = 1
# for i in range(1, n+1):
#     g = i * g
#     print(g)
#
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#247. Дано ціле число n, яке вводить користувач. Необхідно обчислити значення виразу 1! +2! +3! + … + n!.
#?????????????????????????????????????????????????????????????


#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#248.Користувач вводить n-цифрове ціле число.
# Необхідно вивести числа, утворені із введеного, відкиданням останньої цифри з кожного попереднього числа.
#
# n = 138945
# lst = []
# for i in str(n):
#     lst.append(i)
#
# while lst:
#     del lst[-1]
#     g = ''.join(lst)
#     print(g)
#
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#249. Програма отримує на вхід послідовність цілих невід’ємних чисел, кожне число вводиться в окремому рядку.
# Послідовність завершується числом 0, при зчитуванні якого програма повинна закінчити свою роботу і вивести кількість членів послідовності (не рахуючи завершального числа 0).
#
# lst = []
#
# while True:
#     num = int(input('Enter: '))
#     if num == 0:
#         break
#     lst.append(num)
#
# print(len(lst))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#250. Визначте суму усіх елементів послідовності, яка завершується числом 0.
# Вводиться послідовність цілих чисел, що закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її закінчення).
#
# lst = []
#
# while True:
#     num = int(input('Enter: '))
#     if num == 0:
#         break
#     lst.append(num)
#
# print(sum(lst))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# 251. Визначте середнє значення всіх елементів послідовності, яка завершується числом 0.
# Вводиться послідовність цілих чисел, що закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її закінчення).
# lst = []
#
# while True:
#     num = int(input('Enter: '))
#     if num == 0:
#         break
#     lst.append(num)
#
# print(sum(lst) / len(lst))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#252. Визначте кількість парних елементів в послідовності, яка завершується числом 0.
# Вводиться послідовність цілих чисел, що закінчується числом 0 (саме число 0 в послідовність не входить, а використвоується як ознака її закінчення).
# lst = []
# count = 0
# while True:
#     num = int(input('Enter: '))
#     if num == 0:
#         break
#     lst.append(num)
#
# for i in lst:
#     if i%2==0:
#         count += 1
#
# print(lst)
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#253. Послідовність складається з натуральних чисел і завершується числом 0.
# Визначте значення найбільшого елемента послідовності.
# Вводиться послідовність цілих чисел, що закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її закінчення).
# lst = []
#
# while True:
#     num = int(input('Enter: '))
#     if num == 0:
#         break
#     lst.append(num)
#
# print(max(lst))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#254. Автогонщик в перший день ралі проїхав d км. Кожен наступний день він збільшував пробіг на 10% від пробігу попереднього дня.
# Через скільки днів автоспортивних змагань сумарний пробіг автомобіля за всі дні перевищить t км і яке значення сумарного пробігу?
# Введення даних користувачем відбувається в порядку: d, t.
# d = 10
# t = 200
# days = 1
#
# while t >= d:
#     d = d * 1.1
#     days += 1
#
# print(f'{d:.2f} km, {days} days')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#255. Визначити кількість трицифрових чисел, сума цифр яких дорівнює деякому цілому значенню n, яке вводить користувач.
# n = 20
# count = 0
#
# for i in range(100, 1000):
#     i = str(i)
#     a = int(i[0])
#     b = int(i[1])
#     c = int(i[2])
#     if (a+b+c) == n:
#         count += 1
#
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#256. Напишіть програму, яка виводить усі трицифрові числа, сума цифр яких дорівнює деякому значенню n, яке вводить користувач.
# n = 4
#
# for i in range(100, 1000):
#     i = str(i)
#     a = int(i[0])
#     b = int(i[1])
#     c = int(i[2])
#     if (a+b+c) == n:
#         print(i)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#259. Дано цілі числа a і b. Знайти їх добуток, не використовуючи операцію множення.
# a = 5
# b = 9
# count = 0
#
# for i in range(a):
#     for w in range(b):
#         count += 1
#
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#260. Дано цілі числа a і b. Обчислити a**b, не використовуючи операцію піднесення до степеня.
# a = 4
# b = 2
# count = 1
# for i in range(b):
#     count = count * a
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#261. Напишіть програму, яка зчитує числа (по одному в рядку) до тих пір, поки сума введених чисел не буде дорівнювати 0
# і відразу після цього виводить суму квадратів всіх введених чисел.
# Гарантується, що в якийсь момент сума введених чисел дорівнюватиме 0, після цього зчитування продовжувати не потрібно.
# num = int(input('Enter: '))
# lst = []
# lst.append(num)
#
# while sum(lst) != 0:
#     n = int(input('Enter: '))
#     lst.append(n)
#
# count = 0
#
# for i in lst:
#     count += i**2
# print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#262. Одноклітинна амеба кожні 3 години ділиться на 2 клітини.
# Визначити, скільки клітин буде через t годин, якщо спочатку була одна амеба.
# t = 6
# a = 1
#
# for i in range(1, t+1):
#     if i%3 == 0:
#         a *= 2
# print(a)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#263. Учні 5 класу вели щоденники спостереження за погодою і щодня записували денну температуру.
# Знайдіть найнижчу температуру за весь час спостережень.
# Якщо температура знижувалась нижче -15 градусів, необхідно вивести Yes, у протилежному випадку No.
# Програма отримує на вхід кількість днів, протягом яких проводилося спостереження n (1 ≤ n ≤ 31), потім для кожного дня вводиться температура.
# days = int(input('How much days: '))
# lst = []
#
# for i in range(1, days+1):
#     t = int(input('Enter: '))
#     lst.append(t)
# print(min(lst))
# for i in lst:
#     if i <= -15:
#         print('Yes')
#         break
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#265. Камера спостереження реєструє в автоматичному режимі швидкість проїжджаючих повз неї автомобілів, округляючи значення швидкості до цілих чисел.
# Необхідно визначити середню зареєстровану швидкість всіх автомобілів.
# Якщо швидкість хоча б одного автомобіля була більше 60 км/год, виведіть Yes, інакше виведіть No.
# Програма отримує на вхід число зафіксованих автомобілів n (1 ≤ n ≤ 30), потім вказуються їх швидкості.
# Значення швидкості не може бути менше 1 і більше 300.
# Програма повинна спочатку вивести середню швидкість з точністю до одного знака після десяткової крапки, потім Yes або No.
# car = int(input('A number of cars: '))
# lst = []
# for i in range(1, car+1):
#     s = int(input('Enter a speed: '))
#     lst.append(s)
#
# v = sum(lst) / car
# print(f'{v:.1f}')
# for i in lst:
#     if i > 60:
#         print('Yes')
#         quit()
# print('No')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#.266. Камера спостереження реєструє в автоматичному режимі швидкість проїжджаючих повз неї автомобілів,
# округляючи значення швидкості до цілих чисел.
# Необхідно визначити:
# різницю максимальної і мінімальної швидкостей автомобілів;
# кількість автомобілів, швидкість яких не перевищувала 30 км/год.
# Програма отримує на вхід число зафіксованих автомобілів n (1 ≤ n ≤ 30), потім вказуються їх швидкості.
# Значення швидкості не може бути менше 1 і більше 300.
# Програма повинна спочатку вивести різницю максимальної та мінімальної швидкостей автомобілів,
# потім кількість автомобілів, швидкість яких не перевищувала 30 км/год.
# car = int(input('A number of cars: '))
# lst = []
#
# for i in range(1, car+1):
#     s = int(input('Enter a speed: '))
#     lst.append(s)
#
# print(max(lst) - min(lst))
# speed_under_30 = 0
# for i in lst:
#     if i <= 30:
#         speed_under_30 += 1
#
# print(speed_under_30)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#267. Напишіть програму, яка виводить двовимірну квадратну таблицю n x n чисел (n - ціле число, яке вводить користувач).
# По головній діагоналі таблиці (від лівого верхнього значення до нижнього правого значення) мають розміщуватися 0,
# вище головної діагоналі розміщуються 1, а нижче - -1.
# Для гарного відображення таблиці при виведенні її значень використовуйте символ табуляції \t.
# Вихідні дані:
#  0	1	1	1	1
# -1	0	1	1	1
# -1	-1	0	1	1
# -1	-1	-1	0	1
# -1	-1	-1	-1	0
#
# n = 5
#
# for i in range(n):l
#      lst = []
#
#      for w in range(n):
#           if i == w:
#                w = 0
#                lst.append(str(w))
#           elif w > i:
#                w = 1
#                lst.append(str(w))
#           elif w < i:
#                w = -1
#                lst.append(str(w))
#
#      g = '\t'.join(lst)
#      print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#268.За даним натуральним числом n (n ≤ 9) виведіть драбинку з n сходинок як у вихідних даних, n-а сходинка складається з чисел від 1 до n без пропусків.
# n = 5
# lst = []
#
# for i in range(1, n+1):
#      lst.append(str(i))
#      g = ''.join(lst)
#      print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#269. Напишіть програму, на вхід якої безперервно (у циклі) подаються введені користувачем дані.
# При введенні будь-яких даних, окрім цілих числел, виводиться повідомлення про помилку за допомогою генерування винятку ValueError.
# Як тільки ввели ціле число, виводиться повідомлення True і відбувається вихід з програми.
#
# while True:
#      try:
#           num = int(input('Enter: '))
#           if type(num) == type(1):
#                print(True)
#           break
#      except ValueError:
#           print('This is not a integer number. Try again...')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#271. Дано натуральне число n. Надрукуйте всі n-значні непарні натуральні числа в порядку спадання.
# n = 100
# lst = []
# for i in range(n, 0, -1):
#
#      if i %2 == 1:
#           lst.append(str(i))
#
# g = ' '.join(lst)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#272. Дано два натуральних числа a і b.
# Розробити програму для визначення найбільшого спільного дільника (НСД) заданих чисел. Використайте алгоритм Евкліда .
# a = 48
# b = 36
#
# if a>b:
#
#      while b != 0:
#           r = a % b
#           a,b = b,r
#      print(a)
#
# elif a<b:
#      a,b = b,a
#      while b != 0:
#           r = a % b
#           a,b = b,r
#      print(a)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#274. Дано цілі числа a і b (a > b).
# Визначити результати цілочисельного ділення a на b і залишку від ділення a на b,
# не використовуючи стандартні операції цілочисельного ділення і залишку від ділення.
# Результати необхідно вивести в одному рядку, спочатку результат цілочисельного ділення, а потім залишок від ділення, розділені одним пропуском.
# a = 16
# b = 5
# r = 0
#
# while a >= b:
#      a-=b
#      r+=1
#
# print(r, a)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# 275. Дано натуральне число n. Визначити, чи є різниця його максимальної та мінімальної цифр парним числом.
# n = 1234
# lst = []
# for i in str(n):
#      lst.append(i)
#
# print((int(max(lst)) - int(min(lst))) % 2 == 0)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# 276. Є монотонна послідовність, в якій кожне натуральне число k зустрічається рівно k разів: 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, ....
# За введеним натуральним числом n виведіть перші n членів цієї послідовності.
# n = 5
# lst = []
#
# for i in range(1, n+1):
#      for w in range(i):
#           w = i
#           lst.append(str(w))
# f = " ".join(lst[0:n])
# print(f)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#277. Написати програму для обчислення суми цифр цілого числа n. Програма має враховувати, що на вхід може подаватися ціле від’ємне число.
# n = 412098
# m = abs(n)
# lst = []
#
# for i in str(m):
#      lst.append(int(i))
#
# print(sum(lst))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#278. Внесок на депозитний рахунок у банку становить d гривень.
# Щорічно він збільшується на r відсотків, після чого дробова частина копійок відкидається.
# Визначте, через скільки років внесок складе не менше b гривень.
# Програма отримує на вхід три натуральних числа: d, r, b.
# d = 1000
# r = 14
# b = 2500
#
# year = 0
#
# while b >= d:
#      d += round(d * (r/100))
#      year += 1
#      print(d)
# print(year)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#279. Напишіть програму для отримання рядка Фібоначчі від 0 до n, де n - ціле число.
# Послідовність Фібоначчі - це серія чисел 0, 1, 1, 2, 3, 5, 8, 13, 21, ....
# Кожне наступне число знайдено шляхом додавання двох номерів перед ним.
# n = 50
# f = 0
#
# lst_f = [0, 1]
#
# while n >= lst_f[-1]:
#      f = lst_f[-1] + lst_f[-2]
#      lst_f.append(f)
#
# print(lst_f[0:-1])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#280. За введеним користувачем цілим числом n визначте n-е число Фібоначчі.
# n = 50
# f = 1
# count = 2
# g = 10
# lst_f = [1, 1]
#
# while g >= count:
#      f = lst_f[-1] + lst_f[-2]
#      count += 1
#      lst_f.append(f)
#
# print(lst_f[g-1])
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#281. Дано натуральне число n. Визначте, яким за рахунком числом Фібоначчі воно є.
# Якщо n не є числом Фібоначчі, виведіть значення -1.
# n = 8
# f = 1
# count = 2
#
# lst_f = [1, 1]
#
# while n >= count:
#      f = lst_f[-1] + lst_f[-2]
#      count += 1
#      lst_f.append(f)
#
#
# if n in lst_f:
#      print(lst_f.index(n)+1)
# else:
#      print('-1')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#282. Послідовність складається з натуральних чисел і завершується числом 0.
# Визначте, скільки елементів цієї послідовності більше попереднього елемента.
# Вводиться послідовність цілих чисел, що закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її закінчення).
#
# g = int(input("ENTER : "))
# n = 0
# lst = []
# lst.append(g)
# count = 0
#
# while True:
#      num = int(input('Enter: '))
#      if num == n:
#           break
#
#      if num > lst[-1]:
#           count += 1
#
#      lst.append(num)
#
# print(lst)
# print('count = ', count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#283. Послідовність складається з цілих чисел і закінчується номером 0.
# Визначте, скільки елементів цієї послідовності більше наступного елемента.
# Вводиться послідовність цілих чисел, що закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її закінчення).
# Гарантується, що послідовність містить як мінімум два числа.
#
# g = int(input("ENTER : "))
# b = int(input("enter : "))
# n = 0
# lst = []
# lst.append(g)
# lst.append(b)
# count = 0
#
# while True:
#      num = int(input('Enter: '))
#      if lst[-2] > lst[-1]:
#           count += 1
#
#      if num == n:
#           break
#      lst.append(num)
#
# print(lst)
# print('count = ', count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#284. Послідовність складається з натуральних чисел і завершується числом 0.
# Визначте, скільки елементів цієї послідовності рівні її найбільшому елементу.
# Вводиться послідовність цілих чисел, що закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її закінчення).
#
# g = int(input("ENTER : "))
# stop = 0
# lst = []
# lst.append(g)
#
#
# while True:
#      num = int(input('Enter: '))
#      if num == stop:
#           break
#      lst.append(num)
# print(lst)
#
# print(lst.count(max(lst)))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# 285. Послідовність складається з різних натуральних чисел і завершується числом 0.
# Визначте значення другого за величиною елемента в цій послідовності.
# Вводиться послідовність цілих чисел, що закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її закінчення).
# Гарантується, що в послідовності є хоча б два елементи.
# g = int(input("ENTER : "))
# stop = 0
# lst = []
# lst.append(g)
#
# while True:
#      num = int(input('Enter: '))
#      if num == stop:
#           break
#      lst.append(num)
# print(lst)
# lst.remove(max(lst))
# print(max(lst))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#286.Послідовність складається з натуральних чисел і завершується числом 0.
# Визначте індекс найбільшого елемента послідовності.
# Якщо найбільших елементів декілька, виведіть індекс першого з них.
# Нумерація елементів починається з нуля.
# Вводиться послідовність цілих чисел, що закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її закінчення).
# g = int(input("ENTER : "))
# stop = 0
# lst = []
# lst.append(g)
#
# while True:
#      num = int(input('Enter: '))
#      if num == stop:
#           break
#      lst.append(num)
# print(lst)
#
# print(lst.index(max(lst)))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#287. Дано послідовність ненульових цілих чисел, яка завершується нулем (саме число 0 в послідовність не входить, а використовується як ознака її закінчення).
# Необхідно обчислити скільки разів в цій послідовності змінюється знак (наприклад, в послідовності 10, -4, 12, 56, -4 знак змінюється 3 рази).
# g = int(input("ENTER : "))
# stop = 0
# lst = []
# lst.append(g)
# count = 0
#
# while True:
#      num = int(input('Enter: '))
#      if num == stop:
#           break
#      if ((num > 0) and (lst[-1] > 0)) or ((num < 0) and (lst[-1] < 0)):
#           count = count
#      elif (num > 0) and (lst[-1] < 0):
#           count += 1
#      elif (num < 0) and (lst[-1] > 0):
#           count += 1
#      lst.append(num)
# print(lst)
#
# print('count: ', count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#288. Дано послідовність натуральних чисел, що завершується числом 0.
# Визначте найбільше число елементів цієї послідовності, що йдуть підряд один за одним, і дорівнюють один одному.
# Вводиться послідовність цілих чисел, що закінчується числом 0 (саме число 0 в послідовність не входить, а використовується як ознака її закінчення).
# Додаткове завдання: виведіть найбільш повторюваний елемент послідовності.
# g = int(input("ENTER : "))
# stop = 0
# lst = []
# lst.append(g)
# lst_f = []
# count = 1
#
# while True:
#      num = int(input('Enter: '))
#
#      if num == lst[-1]:
#           count += 1
#      elif num != lst[-1]:
#           lst_f.append(count)
#           count = 1
#
#      if num == stop:
#           break
#
#      lst.append(num)
#      print(lst)
#
# print(max(lst_f))
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#289. Скласти програму для графічного зображення подільності чисел від 1 до n (значення n вводиться з клавіатури).
# У кожному рядку треба надрукувати чергове число і стільки символів +, скільки є дільників у цього числа.
# n = 5
#
# for i in range(1, n+1):
#     t = ''
#     for w in range(1, n+1):
#         if i%w == 0:
#             t += '+'
#
#     print(i,t)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#290. Дано натуральне число n. Визначити номер деякої заданої цифри d в ньому, відраховуючи від кінця числа.
# Якщо такої цифри немає, відповіддю має бути число 0;
# якщо таких цифр в числі кілька, повинен бути визначений номер позиції найправішої з них.
# n = 1233572
# d = 5
# lst = []
#
# for i in str(n):
#     lst.append(int(i))
#
# lst.reverse()
#
# if d in lst:
#     print(lst.index(d)+1)
# else:
#     print(0)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#291. Вводиться ціле число n. Вивести число, зворотне по порядку складових його цифр.
# n = 123456789
# lst = []
# for i in str(n):
#     lst.append(i)
#
# lst.reverse()
#
# f = ''.join(lst)
#
# print(f)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#292. Назвемо число паліндромом, якщо воно не змінюється при перестановці його цифр у зворотному порядку.
# Напишіть програму, яка за введеним користувачем числом n (1 ≤ n ≤ 100000) виводить числа-паліндроми, які не перевищують n.
# n = 5665
#
# for i in range(1, n+1):
#     if i < 10:
#         print(i)
#     elif (i >= 10) and (i < 100) and (str(i)[0] == str(i)[1]):
#         print(i)
#     elif (i >= 100) and (i < 1000) and (str(i)[0] == str(i)[1] == str(i)[2]):
#         print(i)
#     elif (i >= 1000) and (i < 10000) and (str(i)[0:2] == str(i)[-2:][::-1]):
#         print(i)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#293.Назвемо число паліндромом, якщо воно не змінюється при перестановці його цифр у зворотному порядку.
# Напишіть програму, яка за введеною користувачем кількістю n (1 ≤ n ≤ 100000) виводить кількість таких чисел-паліндромів, які не перевищують n.
# n = 10
# count = 0
# for i in range(1, n+1):
#     if i < 10:
#         print(i)
#         count += 1
#     elif (i >= 10) and (i < 100) and (str(i)[0] == str(i)[1]):
#         print(i)
#         count += 1
#     elif (i >= 100) and (i < 1000) and (str(i)[0] == str(i)[1] == str(i)[2]):
#         print(i)
#         count += 1
#     elif (i >= 1000) and (i < 10000) and (str(i)[0:2] == str(i)[-2:][::-1]):
#         print(i)
#         count += 1
#
# print('count:',count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#294. Дано два чотирицифрових числа a і b.
# Виведіть усі чотирицифрові числа на відрізку від a до b, які є паліндромами (читаються однаково як зліва направо, так і справа наліво).
# a = 1400
# b = 2200
#
# for i in range(a, b+1):
#     if  str(i)[0:2] == str(i)[-2:][::-1]:
#         print(i)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#296. Для настільної гри використовуються картки з номерами від 1 до n.
# Одна картка загубилася. Знайдіть її, знаючи номери решти карток.
# Користувач вводить ціле число n, далі n-1 номери решти карток (різні числа від 1 до n). Програма повинна вивести номер втраченої картки.
# n = int(input('enter: '))
# lst = []
# lst.append(n)
# for i in range(1, n+1):
#     num = int(input('Enter: '))
#     if num == n:
#         break
#     lst.append(num)
# print(lst)
# for i in range(1, n+1):
#     if i in lst:
#         continue
#     else:
#         print(i)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#297. Оленка вчиться ділити з залишком. Вона взяла деяке число, розділила його на 2 і відкинула залишок.
# Те, що вийшло, розділила на 3 та знову відкинула залишок.
# Отримане число вона розділила на 4, відкинула залишок і отримала число k.
# Яке число могла вибрати Оленка спочатку? Вводиться натуральне число k, що не перевершує 1000.
# Необхідно вивести усі можливі числа, які могла б вибрати спочатку Оленка, за зростанням, розділяючи їх пропусками.
# k = 5
# lst = []
#
# for i in range(1, 1001):
#     if (((i // 2) // 3) // 4) == k:
#         lst.append(str(i))
#
# g = ' '.join(lst)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#298. Скільки всього натуральних чисел складаються з не менш ніж a цифр і не більше, ніж b цифр?
# Вводяться два довільних натуральних числа a і b в окремих рядках.
# Виведіть одне число: кількість чисел, що володіють зазначеними властивостями.
# a = 2
# b = 2
# count = 0
#
# c = int('1' + '0'* a)
# d = int('1' + '0'* b)
# print(c)
# print(d)
# if a == 1 and b == 1:
#     for i in range(1, d):
#         count += 1
#     print(count)
# elif a == b:
#     for i in range(c, d*10-1):
#         count += 1
#     print(count)
# elif a == 1:
#     for i in range(1, d):
#         count += 1
#     print(count)
# else:
#     for i in range(c, d):
#         count += 1
#     print(count)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#299. Дано натуральне число n (n ≤ 1000). Скласти програму для перевірки чи ділиться ціле число на кожну з його цифр без залишку.
# Надрукувати такі числа в інтервалі від 10 до n в порядку зростання, через пропуск.
# n = 100
# lst = []
# for i in range(10, n+1):
#     if n % i == 0:
#         lst.append(str(i))
#         g = " ".join(lst)
# print(g)
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#300. В одній країні використовуються грошові купюри номіналом в 1, 2, 4, 8, 16, 32 і 64.
# Дано натуральне число n.
# Якою найменшою кількістю таких грошових знаків можна виплатити суму n (вказати кількість кожної з використовуваних для виплати купюр)?
# Передбачається, що є досить велика кількість купюр всіх номіналів.
# lst = [64, 32, 16, 8, 4, 2, 1]
# n = 165
#
# while n > 0:
#     for i in lst:
#         if n >= i:
#             a = n // i
#             n = n - i * a
#             print(f'Номінал: {i} --- купюри: {a}')
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#301. Задумали два натуральних числа x і y (x, y ≤ 1000).
# Щоб відгадати ці числа, називають суму цих чисел a і їх добуток b.
# Відгадайте ці числа і виведіть їх в порядку зростання, розділяючи пропуском.
# a = 6
# b = 8
# lst = []
# for i in range(1, 1001):
#     for w in range(1, 1001):
#         if i + w == a and i * w == b:
#             lst.append(str(i))
#             lst.append(str(w))
#
# lst_f = []
# for i in lst:
#     if i not in lst_f:
#         lst_f.append(i)
#
# lst_f.sort()
# g = ' '.join(lst_f)
# print(g)














